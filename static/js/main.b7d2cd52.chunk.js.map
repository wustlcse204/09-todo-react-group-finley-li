{"version":3,"sources":["NewTodo.js","Todo.js","TodoList.js","App.js","index.js"],"names":["NewTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textValue","handleTextChange","bind","assertThisInitialized","handleDropDownChange","event","setState","target","value","sorter","_this2","react_default","a","createElement","onSubmit","e","addEventHandler","type","id","className","onChange","placeholder","required","htmlFor","name","sortOption","Component","Todo","todoData","completed","onClick","toggleEventHandler","text","deleteEventHandler","TodoList","_Component","inherits","createClass","key","map","data","src_Todo_0","apiKey","App","addEvent","newEvent","preventDefault","fetch","method","headers","Content-Type","X-API-KEY","body","JSON","stringify","then","response","status","json","console","log","responseData","getAllEventsFromServer","updateEventFromServer","eventId","concat","deleteEvent","toConsumableArray","sortEvent","sort","b","Date","src_NewTodo_0","src_TodoList_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b7d2cd52.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './NewTodo.css';\r\n\r\nclass NewTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { textValue: '' };\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleDropDownChange=this.handleDropDownChange.bind(this);\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({ textValue: event.target.value });\r\n    }\r\n\r\n    handleDropDownChange(event){\r\n        \r\n        \r\n\r\n    this.props.sorter(event.target.value);\r\n    }\r\n    \r\n    render() {\r\n     \r\n        return (\r\n            <header>\r\n                <h2>My ToDo App</h2>\r\n                <div>\r\n                    <form onSubmit={(e) => { this.props.addEventHandler(e, this.state.textValue); this.setState({ textValue: \"\" }) }}>\r\n                        <input type=\"text\" id=\"add-item-input\" className=\"add-item-input\" value={this.state.textValue} onChange={this.handleTextChange} placeholder=\"Add a new event\" required />\r\n                        <button type=\"submit\" className=\"add-event-btn\" id=\"add-event-btn\">Add</button>\r\n\r\n                        <div className=\"drop-down\">\r\n                            <label htmlFor=\"sort\">Sorted by: </label>\r\n                            <select id=\"sort\" name=\"choices\" value={this.props.sortOption} onChange={this.handleDropDownChange}>\r\n                                <option value=\"created-date\" >Created Date</option>\r\n                                <option value=\"alphabetical\">Alphabetical</option>\r\n\r\n                                <option value=\"completed-status\">Completed Status</option>\r\n\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </header>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTodo;\r\n","import React, { Component } from 'react';\r\nimport './Todo.css';\r\n\r\nclass Todo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n\r\n      <li className={this.props.todoData.completed ? \"checked\" : \"unchecked\"} onClick={() => { this.props.toggleEventHandler(this.props.todoData.id, this.props.todoData.completed) }}>{this.props.todoData.text}\r\n        <span className=\"close-btn\" onClick={() => { this.props.deleteEventHandler(this.props.todoData.id) }}></span>\r\n      </li>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react'\r\nimport Todo from './Todo';\r\nimport './TodoList.css';\r\n\r\nexport class TodoList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"to-do-list-container\" id=\"to-do-list-container\">\r\n                <ul className=\"to-do-list\" id=\"to-do-list\">\r\n\r\n                    {this.props.todoData.map(data => <Todo todoData={data} key={data.id} deleteEventHandler={this.props.deleteEventHandler} toggleEventHandler={this.props.toggleEventHandler} />)}\r\n\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport NewTodo from './NewTodo';\r\nimport Todo from './Todo';\r\nimport TodoList from './TodoList';\r\n\r\nlet apiKey = \"b2eaba-21788d-0b683e-9c3e29-524573\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      todoData: [],\r\n      sortOption: 'created-date'\r\n\r\n    };\r\n\r\n    this.getAllEventsFromServer = this.getAllEventsFromServer.bind(this);\r\n    this.addEvent = this.addEvent.bind(this);\r\n    this.deleteEvent = this.deleteEvent.bind(this);\r\n    this.updateEventFromServer = this.updateEventFromServer.bind(this);\r\n    this.sortEvent = this.sortEvent.bind(this);\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    console.log(\"Component did mount\");\r\n    this.getAllEventsFromServer();\r\n  }\r\n\r\n\r\n\r\n  addEvent = (event, newEvent) => {\r\n    event.preventDefault();\r\n\r\n\r\n    fetch('https://cse204.work/todos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-API-KEY': apiKey\r\n      },\r\n      body: JSON.stringify({ \"text\": newEvent })\r\n    }\r\n\r\n    ).then(\r\n      (response) => {\r\n        if (response.status !== 200) {\r\n          console.log(\"Error! Code: \" + response.status);\r\n          return;\r\n        }\r\n        return response.json();\r\n      }\r\n    )\r\n      .then(\r\n        (responseData) => {\r\n          console.log(responseData);\r\n          this.getAllEventsFromServer();\r\n\r\n        }\r\n      )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  updateEventFromServer = (eventId, completed) => {\r\n\r\n    fetch(`https://cse204.work/todos/${eventId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-API-KEY': apiKey\r\n      },\r\n      body: JSON.stringify({ \"completed\": completed ? false : true })\r\n\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            console.log(\"Error! Code: \" + response.status);\r\n            return;\r\n          }\r\n          else {\r\n            console.log(\"Update successful\");\r\n            this.getAllEventsFromServer();\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  deleteEvent = (eventId) => {\r\n\r\n\r\n\r\n    //delete event from the server\r\n    fetch(`https://cse204.work/todos/${eventId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-API-KEY': apiKey\r\n      }\r\n\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            console.log(\"Error! Code: \" + response.status);\r\n            return;\r\n          }\r\n          else {\r\n            console.log(\"Delete successful\");\r\n            this.getAllEventsFromServer();\r\n          }\r\n        }\r\n      )\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //retrieve the list of events \r\n  getAllEventsFromServer = () => {\r\n\r\n    fetch('https://cse204.work/todos', {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-API-KEY': apiKey,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(\r\n      (response) => {\r\n        if (response.status !== 200) {\r\n          console.log(\"Error! Code: \" + response.status);\r\n          return;\r\n        }\r\n        return response.json();\r\n      }\r\n    )\r\n      .then(\r\n        (responseData) => {\r\n          console.log(\"All data from server: \", responseData);\r\n\r\n\r\n\r\n        \r\n\r\n\r\n          this.setState({ todoData: [...responseData] });\r\n          this.sortEvent(this.state.sortOption);\r\n          \r\n        }\r\n\r\n      )\r\n\r\n  };\r\n\r\n\r\n\r\n  sortEvent = (sortOption) => {\r\n\r\n    \r\n    this.setState({ sortOption: sortOption });\r\n    let data=this.state.todoData;\r\n    // console.log(\"Before sort: \",data);\r\n    if (sortOption === \"created-date\") {\r\n      // console.log(\"sorting by created date\")\r\n      data.sort((a, b) => (new Date(a[\"created_at\"]) > new Date(b[\"created_at\"])) ? 1 : -1)\r\n    }\r\n    else if (sortOption === \"alphabetical\") {\r\n      // console.log(\"sorting by alphabetical\")\r\n      data.sort((a,b)=>{\r\n        if(a.text===b.text){\r\n          return 0;\r\n        }\r\n        else if(a.text<b.text){\r\n          return -1;\r\n        }\r\n        else{\r\n          return 1; \r\n        }\r\n      })\r\n    }\r\n    else {\r\n      // console.log(\"sorting by completed date\")\r\n      data.sort((a, b) => {\r\n        if (a.completed && !b.completed) {\r\n          return 1;\r\n        }\r\n        else if (!a.completed && b.completed) {\r\n          return -1;\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n\r\n      });\r\n    }\r\n    // console.log(\"After sort: \",data);\r\n    this.setState({ todoData: data });\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    // console.log(\"Current: \",this.state.todoData);\r\n    \r\n    return (\r\n\r\n      <div id=\"main-section\" className=\"main-section\">\r\n\r\n\r\n        <NewTodo addEventHandler={this.addEvent} sorter={this.sortEvent} sortOption={this.state.sortOption} />\r\n\r\n\r\n        <TodoList todoData={this.state.todoData} deleteEventHandler={this.deleteEvent} toggleEventHandler={this.updateEventFromServer} />\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}